@model BuildIt.Models.Project

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Project</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ProjectName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProjectName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProjectInventories)
        </dt>
        @for(var itemIndex=0; itemIndex < Model.ProjectInventories.Count(); itemIndex++ ) 
        {
    
        <dd>
            @Html.DisplayFor(model => model.ProjectInventories.ToList()[itemIndex].Inventory.Title)
        </dd>
        }    
        
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ProjectId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<ul id="AllInventories"></ul>
<script>
    function httpGetAsync(theUrl, callback) {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                callback(xmlHttp.responseText);
        }
        xmlHttp.open("GET", theUrl, true); // true for asynchronous 
        xmlHttp.send(null);
    }

    httpGetAsync('/api/projectInventories', function (data) {
        console.log(data);
    });
</script>